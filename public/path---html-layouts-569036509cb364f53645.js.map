{"version":3,"sources":["webpack:///path---html-layouts-569036509cb364f53645.js","webpack:///./.cache/json/html-layouts.json"],"names":["webpackJsonp","4432","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6tFAA4nCC,QAAkoDC,KAAA,kBAAwBC,aAAgBC,MAAA,aAAoBC,aAAgBH,KAAA","file":"path---html-layouts-569036509cb364f53645.js","sourcesContent":["webpackJsonp([210671628919975],{\n\n/***/ 4432:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Layouts</h2>\\n<p>Layouts organize different areas of the web page.</p>\\n<p>Almost every web page we see can be divided into boxes, that can be arranged into specific order to create that web page. The image below is one such example.</p>\\n<p><img src=\\\"http://i.imgur.com/Z1DSMYC.png\\\" alt=\\\"Sample of Website Design - www.codementor.io\\\"></p>\\n<blockquote>\\n<p>Websites often display content in multiple columns (like a magazine or newspaper).</p>\\n</blockquote>\\n<p>And the HTML layout techniques help us put the needed information into the needed order or design.</p>\\n<h3>Techniques to Implement Layouts</h3>\\n<h4>HTML Tables</h4>\\n<p>One the most basic tools to implement layouts in a webpage, these are provided by HTML. But as the layout gets complicated HTML tables quickly lose their ease, because of the increase in markup text.</p>\\n<!-- Examples needed  -->\\n<h4>CSS Float</h4>\\n<p>If you are to design a 2-column based page with left navigation pane and center content viewing area, its easy to do it with CSS floats. Simply set the left navigation page into a <code>&#x3C;div></code> with style property <code>float: left;</code>. And voila you get that design. But what if you had 4 columns in a single section. Sure, one can do it with floats, but the syntax of HTML you would be writing would be easy to comprehend.</p>\\n<!-- Examples needed  -->\\n<h4>CSS Frameworks</h4>\\n<p>This is where CSS Frameworks such as <a href=\\\"http://getbootstrap.com/\\\">Bootstrap</a> and <a href=\\\"http://materializecss.com/\\\">Materialize</a> come in. These frameworks provide a grid functionality that lets to divide each section of your webpage into 12 columns, which you can order to design. </p>\\n<!-- Examples needed  -->\\n<h3>HTML Semantic Elements</h3>\\n<p>Websites often display content in multiple columns (like a magazine or newspaper).</p>\\n<p>HTML5 offers new semantic elements that define the different parts of a web page:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><header> - Defines a header for a document or a section\\n<nav> - Defines a container for navigation links\\n<section> - Defines a section in a document\\n<article> - Defines an independent self-contained article\\n<aside> - Defines content aside from the content (like a sidebar)\\n<footer> - Defines a footer for a document or a section\\n<details> - Defines additional details\\n<summary> - Defines a heading for the <details> element</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<ul>\\n<li><a href=\\\"https://www.w3schools.com/html/html_layout.asp\\\">W3 Schools - Layout</a></li>\\n<li><a href=\\\"https://www.codementor.io/codementorteam/4-different-html-css-layout-techniques-to-create-a-site-85i9t1x34\\\">CodeMentorTeam</a> - Layout Techniques to Create a Site</li>\\n</ul>\",\"fields\":{\"slug\":\"/html/layouts/\"},\"frontmatter\":{\"title\":\"Layouts\"}}},\"pathContext\":{\"slug\":\"/html/layouts/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---html-layouts-569036509cb364f53645.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Layouts</h2>\\n<p>Layouts organize different areas of the web page.</p>\\n<p>Almost every web page we see can be divided into boxes, that can be arranged into specific order to create that web page. The image below is one such example.</p>\\n<p><img src=\\\"http://i.imgur.com/Z1DSMYC.png\\\" alt=\\\"Sample of Website Design - www.codementor.io\\\"></p>\\n<blockquote>\\n<p>Websites often display content in multiple columns (like a magazine or newspaper).</p>\\n</blockquote>\\n<p>And the HTML layout techniques help us put the needed information into the needed order or design.</p>\\n<h3>Techniques to Implement Layouts</h3>\\n<h4>HTML Tables</h4>\\n<p>One the most basic tools to implement layouts in a webpage, these are provided by HTML. But as the layout gets complicated HTML tables quickly lose their ease, because of the increase in markup text.</p>\\n<!-- Examples needed  -->\\n<h4>CSS Float</h4>\\n<p>If you are to design a 2-column based page with left navigation pane and center content viewing area, its easy to do it with CSS floats. Simply set the left navigation page into a <code>&#x3C;div></code> with style property <code>float: left;</code>. And voila you get that design. But what if you had 4 columns in a single section. Sure, one can do it with floats, but the syntax of HTML you would be writing would be easy to comprehend.</p>\\n<!-- Examples needed  -->\\n<h4>CSS Frameworks</h4>\\n<p>This is where CSS Frameworks such as <a href=\\\"http://getbootstrap.com/\\\">Bootstrap</a> and <a href=\\\"http://materializecss.com/\\\">Materialize</a> come in. These frameworks provide a grid functionality that lets to divide each section of your webpage into 12 columns, which you can order to design. </p>\\n<!-- Examples needed  -->\\n<h3>HTML Semantic Elements</h3>\\n<p>Websites often display content in multiple columns (like a magazine or newspaper).</p>\\n<p>HTML5 offers new semantic elements that define the different parts of a web page:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><header> - Defines a header for a document or a section\\n<nav> - Defines a container for navigation links\\n<section> - Defines a section in a document\\n<article> - Defines an independent self-contained article\\n<aside> - Defines content aside from the content (like a sidebar)\\n<footer> - Defines a footer for a document or a section\\n<details> - Defines additional details\\n<summary> - Defines a heading for the <details> element</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<ul>\\n<li><a href=\\\"https://www.w3schools.com/html/html_layout.asp\\\">W3 Schools - Layout</a></li>\\n<li><a href=\\\"https://www.codementor.io/codementorteam/4-different-html-css-layout-techniques-to-create-a-site-85i9t1x34\\\">CodeMentorTeam</a> - Layout Techniques to Create a Site</li>\\n</ul>\",\"fields\":{\"slug\":\"/html/layouts/\"},\"frontmatter\":{\"title\":\"Layouts\"}}},\"pathContext\":{\"slug\":\"/html/layouts/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/html-layouts.json\n// module id = 4432\n// module chunks = 210671628919975"],"sourceRoot":""}