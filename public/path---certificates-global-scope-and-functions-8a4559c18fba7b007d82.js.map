{"version":3,"sources":["webpack:///path---certificates-global-scope-and-functions-8a4559c18fba7b007d82.js","webpack:///./.cache/json/certificates-global-scope-and-functions.json"],"names":["webpackJsonp","3667","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,8gBAAAC,QAA+hBC,KAAA,6CAAmDC,aAAgBC,MAAA,gCAAuCC,aAAgBH,KAAA","file":"path---certificates-global-scope-and-functions-8a4559c18fba7b007d82.js","sourcesContent":["webpackJsonp([32735031508571],{\n\n/***/ 3667:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>In JavaScript, <code>scope</code> refers to the visibility of variables. Variables which are defined outside of a function block have <code>Global</code> scope. This means, they can be seen everywhere in your JavaScript code.</p>\\n<p>Variables which are used without the <code>var</code> keyword are automatically created in the <code>global</code> scope. This can create unintended consequences elsewhere in your code or when running a function again. You should always declare your variables with <code>var</code>.</p>\",\"fields\":{\"slug\":\"/certificates/global-scope-and-functions/\"},\"frontmatter\":{\"title\":\"Global Scope and Functions\"}}},\"pathContext\":{\"slug\":\"/certificates/global-scope-and-functions/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-global-scope-and-functions-8a4559c18fba7b007d82.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>In JavaScript, <code>scope</code> refers to the visibility of variables. Variables which are defined outside of a function block have <code>Global</code> scope. This means, they can be seen everywhere in your JavaScript code.</p>\\n<p>Variables which are used without the <code>var</code> keyword are automatically created in the <code>global</code> scope. This can create unintended consequences elsewhere in your code or when running a function again. You should always declare your variables with <code>var</code>.</p>\",\"fields\":{\"slug\":\"/certificates/global-scope-and-functions/\"},\"frontmatter\":{\"title\":\"Global Scope and Functions\"}}},\"pathContext\":{\"slug\":\"/certificates/global-scope-and-functions/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-global-scope-and-functions.json\n// module id = 3667\n// module chunks = 32735031508571"],"sourceRoot":""}