webpackJsonp([0x96acb37218ed],{6027:function(e,o){e.exports={data:{markdownRemark:{html:"<p><a href='https://docs.python.org/3/library/stdtypes.html#truth-value-testing' target='_blank' rel='nofollow'>Python Docs - Truth Value Testing</a></p>\n<p>Any object can be tested for truth value, for use in an <code>if</code> or <code>while</code> condition or as operand of a Boolean operation like <code>and</code>, <code>or</code>, or <code>not</code>.</p>\n<p>The following values are considered false:</p>\n<ul>\n<li><code>None</code></li>\n<li><code>False</code></li>\n<li>zero of any numeric type, for example, <code>0</code>, <code>0.0</code>, <code>0j</code>, <code>Decimal(0)</code>, <code>Fraction(0, 1)</code>.</li>\n<li>any empty sequence, for example, <code>''</code>, <code>()</code>, <code>[]</code>, <code>set()</code>, <code>range(0)</code>.</li>\n<li>any empty mapping, for example, <code>{}</code>.</li>\n<li>instances of user-defined classes, if the class defines a <code>__bool__()</code> or <code>__len__()</code> method, when that method returns <code>False</code> or <code>0</code>.</li>\n</ul>\n<p>All other values are considered true â€” so objects of many types are always true.</p>\n<p>Operations and built-in functions that have a Boolean result always return <code>0</code> or <code>False</code> for false and <code>1</code> or <code>True</code> for true, unless otherwise stated. (Important exception: the Boolean operations <code>or</code> and <code>and</code> always return one of their operands.)</p>",fields:{slug:"/python/truth-value-testing/"},frontmatter:{title:"Python Truth Value Testing"}}},pathContext:{slug:"/python/truth-value-testing/"}}}});
//# sourceMappingURL=path---python-truth-value-testing-d98f2135ebe37e24916e.js.map