webpackJsonp([0x9f4d3efe3397],{4813:function(e,t){e.exports={data:{markdownRemark:{html:'<h2>Promise Reject</h2>\n<p> A <code>Promise.reject</code> function returns an error condition to the calling function. It takes a single parameter, an Error object or value, as the reason for rejection.</p>\n<p>Chaining a catch function at the end of a Promise caller will allow you to catch the error condition.</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>promiseCallingFunction(paramList)\n  .then( ... )\n  ...\n  .then( ... )\n  .catch( function(err) { // catch function\n    /*\n     * this is where you can access the reason for the rejection\n     */ \n  });</code></pre>\n      </div>',fields:{slug:"/javascript/standard-objects/promise/promise-reject/"},frontmatter:{title:"Promise Reject"}}},pathContext:{slug:"/javascript/standard-objects/promise/promise-reject/"}}}});
//# sourceMappingURL=path---javascript-standard-objects-promise-promise-reject-85083b797bfc9551d0aa.js.map