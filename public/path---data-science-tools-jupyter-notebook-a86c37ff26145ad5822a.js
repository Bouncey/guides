webpackJsonp([23178432052596],{4203:function(e,o){e.exports={data:{markdownRemark:{html:'<h2>Jupyter Notebook</h2>\n<p>The Jupyter Notebook helps you create and share documents containing live code, equations, visualizations and rich text.   </p>\n<p>You can use it for:</p>\n<ul>\n<li>data cleaning and transformation</li>\n<li>numerical simulation</li>\n<li>statistical modeling</li>\n<li>data visualization</li>\n<li>machine learning</li>\n</ul>\n<p>The Jupyter notebook combines two components:</p>\n<h3>A web application:</h3>\n<p>The Jupyter Notebook App helps to edit and run notebook documents in a web browser,  combining explanatory text, mathematics, computations and rich media.</p>\n<h3>Notebook document:</h3>\n<p>The Jupyter Notebook App can create a ‘Notebook document’ containing both code and rich text elements. A Notebook document can be both readable and executable.</p>\n<p>These documents are produced by the Jupyter Notebook App.</p>\n<h2>Jupyter Notebook App</h2>\n<p>As a server-client application, the Jupyter Notebook App allows you to edit and run your notebooks via a web browser.<br>\nThe application can be executed on a PC without Internet access or it can be installed on a remote server, where you can access it through the Internet.  </p>\n<p>Its two main components are the kernels and a dashboard.</p>\n<h3>Kernels</h3>\n<p>A kernel is a program that runs and introspects the user’s code. The Jupyter Notebook App has a kernel for Python code, but there are also kernels available for other programming languages.</p>\n<h3>Dashboard</h3>\n<p>The dashboard of the application not only shows you the notebook documents that you have made and can reopen but can also be used to manage the kernels: you can which ones are running and shut them down if necessary.</p>\n<h3>How notebooks work</h3>\n<p>Jupyter notebooks grew out of the IPython project started by Fernando Perez. IPython is an interactive shell, similar to the normal Python shell but with great features like syntax highlighting and code completion. Originally, notebooks worked by sending messages from the web app (the notebook you see in the browser) to an IPython kernel (an IPython application running in the background). The kernel executed the code, then sent it back to the notebook.\n<img src="https://jupyter.readthedocs.io/en/latest/_images/notebook_components.png" alt="Notebook architecture"></p>\n<p>When you save the notebook, it is written to the server as a JSON file with a <strong>.ipynb</strong> file extension\nThe new name Jupyter comes from the combination of <strong>Ju</strong>lia, <strong>Py</strong>thon, and <strong>R</strong>. there are a lot of kernels for different languages to use Jupyter. you could check the <a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels">list of available Jupyter kernels</a>.</p>\n<h3>Installing Jupyter Notebook</h3>\n<p>Jupyter notebooks automatically come with the distribution. You’ll be able to use notebooks from the default environment.\nTo install Jupyter notebooks in a conda environment: <code>conda install jupyter notebook</code>\nTo install Jupyter notebooks with pip: <code>pip install jupyter notebook</code></p>\n<h4>More Information:</h4>\n<ul>\n<li><a href="http://jupyter-notebook-beginner-guide.readthedocs.io/en/latest/what_is_jupyter.html">Jupyter/IPython Notebook Quick Start Guide</a></li>\n<li><a href="https://www.youtube.com/watch?v=q_BzsPxwLOE">What is Jupyter Notebook by codebasics, duration 8:24</a></li>\n<li><a href="https://www.youtube.com/watch?v=EEEZX_0FMEc">Jupyter Notebook Tutorial / Ipython Notebook Tutorial, by codebasics, duration 24:07</a></li>\n<li><a href="https://www.datacamp.com/community/tutorials/tutorial-jupyter-notebook">More Information</a></li>\n</ul>',fields:{slug:"/data-science-tools/jupyter-notebook/"},frontmatter:{title:"Jupyter Notebook"}}},pathContext:{slug:"/data-science-tools/jupyter-notebook/"}}}});
//# sourceMappingURL=path---data-science-tools-jupyter-notebook-a86c37ff26145ad5822a.js.map