{"version":3,"sources":["webpack:///path---certificates-comparisons-with-the-logical-and-operator-af1b4a099dce238175a2.js","webpack:///./.cache/json/certificates-comparisons-with-the-logical-and-operator.json"],"names":["webpackJsonp","3702","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,8pEAAutEC,QAAgDC,KAAA,4DAAkEC,aAAgBC,MAAA,+CAAsDC,aAAgBH,KAAA","file":"path---certificates-comparisons-with-the-logical-and-operator-af1b4a099dce238175a2.js","sourcesContent":["webpackJsonp([198241979455473],{\n\n/***/ 3702:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Sometimes you will need to test more than one thing at a time. The <code>logical and</code> operator (<code>&#x26;&#x26;</code>) returns <code>true</code> if and only if the <code>operands</code> to the left and right of it are true.</p>\\n<p>The same effect could be achieved by nesting an if statement inside another if:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>num <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>num <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"Yes\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"No\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>will only return “Yes” if <code>num</code> is between <code>6</code> and <code>9</code> (6 and 9 included). The same logic can be written as:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>num <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">&amp;&amp;</span> num <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"Yes\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"No\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/comparisons-with-the-logical-and-operator/\"},\"frontmatter\":{\"title\":\"Comparisons with the Logical and Operator\"}}},\"pathContext\":{\"slug\":\"/certificates/comparisons-with-the-logical-and-operator/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-comparisons-with-the-logical-and-operator-af1b4a099dce238175a2.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Sometimes you will need to test more than one thing at a time. The <code>logical and</code> operator (<code>&#x26;&#x26;</code>) returns <code>true</code> if and only if the <code>operands</code> to the left and right of it are true.</p>\\n<p>The same effect could be achieved by nesting an if statement inside another if:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>num <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>num <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"Yes\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"No\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>will only return “Yes” if <code>num</code> is between <code>6</code> and <code>9</code> (6 and 9 included). The same logic can be written as:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>num <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">&amp;&amp;</span> num <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"Yes\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"No\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/comparisons-with-the-logical-and-operator/\"},\"frontmatter\":{\"title\":\"Comparisons with the Logical and Operator\"}}},\"pathContext\":{\"slug\":\"/certificates/comparisons-with-the-logical-and-operator/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-comparisons-with-the-logical-and-operator.json\n// module id = 3702\n// module chunks = 198241979455473"],"sourceRoot":""}