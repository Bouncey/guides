{"version":3,"sources":["webpack:///path---python-files-and-io-a454ffe21b7e95e062d5.js","webpack:///./.cache/json/python-files-and-io.json"],"names":["webpackJsonp","5973","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,i+MAAAC,QAAsqNC,KAAA,yBAA+BC,aAAgBC,MAAA,kBAAyBC,aAAgBH,KAAA","file":"path---python-files-and-io-a454ffe21b7e95e062d5.js","sourcesContent":["webpackJsonp([43632281400262],{\n\n/***/ 5973:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Files and IO</h2>\\n<p>File is a named location on disk to store related information. It is used to permanently store data in non-volatile memory (e.g. hard disk). Since, random access memory (RAM) is volatile which loses its data when computer is turned off, we use files for future use of the data.</p>\\n<p>When we want to read from or write to a file we need to open it first. When we are done, it needs to be closed, so that resources that are tied with the file are freed.</p>\\n<p>Hence, in Python, a file operation takes place in the following order:</p>\\n<ol>\\n<li>Open a file</li>\\n<li>Read or write (perform operation)</li>\\n<li>Close the file</li>\\n</ol>\\n<p>Python has many ways of input and output operations. Some of the output operations can be printing a text, console logs and even output a text or spreadsheet file. </p>\\n<h3>Output to Screen</h3>\\n<p>Python provides the simplest way to produce output to the screen. </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">\\\"Python is a powerful language.\\\"</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">\\\"It is easy to learn.\\\"</span>\\n</code></pre>\\n      </div>\\n<p>Output: </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Python is a powerful language.It is easy to learn.</code></pre>\\n      </div>\\n<h3>Input from User</h3>\\n<p>There are two ways to take input from a user.</p>\\n<dl>\\n  <dt> raw_input([prompt]) </dt>\\n  <dd>Used to read one line from standard input and returns it as a string</dd>\\n</dl>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>str <span class=\\\"token operator\\\">=</span> raw_input<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Enter your name: \\\"</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">\\\"Welcome \\\"</span><span class=\\\"token punctuation\\\">,</span> str\\n</code></pre>\\n      </div>\\n<p>Output: </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Enter your name: John Doe\\nWelcome John Doe</code></pre>\\n      </div>\\n<dl>\\n  <dt>input(prompt)</dt>\\n  <dd>Similar functionality to raw_input(), but assumes the input is a valid Python expression</dd>\\n</dl>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>str <span class=\\\"token operator\\\">=</span> input<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Enter input: \\\"</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">\\\"Input: \\\"</span><span class=\\\"token punctuation\\\">,</span> str\\n</code></pre>\\n      </div>\\n<p>Output: </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Enter input: [x*5 for x in range(2,10,2)]\\nInput: [10,20,30,40]</code></pre>\\n      </div>\\n<h3>Interacting with Files in Python</h3>\\n<p>Using Python, files can be easily opened, read, written and closed. With the available functions :</p>\\n<ol>\\n<li><code>open()</code></li>\\n<li><code>read()</code></li>\\n<li><code>write()</code></li>\\n<li><code>close()</code></li>\\n</ol>\\n<p>Example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>file1 <span class=\\\"token operator\\\">=</span> open<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"foo.txt\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"r+\\\"</span><span class=\\\"token punctuation\\\">)</span>     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Opens the file with read permission.  </span>\\nfile1<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Python is a powerful language.It is easy to learn.\\\"</span><span class=\\\"token punctuation\\\">)</span>     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Writes data into the file.</span>\\ndata <span class=\\\"token operator\\\">=</span> file1<span class=\\\"token punctuation\\\">.</span>read<span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">15</span><span class=\\\"token punctuation\\\">)</span>     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Reads first 15 characters in the file.</span>\\n<span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">\\\"First 15 characters are:\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> data     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Prints output</span>\\nfile1<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Closes the opened file.</span>\\n</code></pre>\\n      </div>\\n<p>Output:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>First 15 characters are:\\nPython is a pow</code></pre>\\n      </div>\\n<h4>Opening Files</h4>\\n<p>The python method open() can be used to return a file object. It is most commonly used with two arguments which are the file name and the mode of access. The mode of access is used to describe the way the file is accessed or used. </p>\\n<p>The most commonly used modes are ‘w’ which is for writing into the file and ‘r’ which is used for reading the file while ‘r+’ is used to read and write the file. ‘a’ is the mode that is used for appending text into the file. The mode argument is also optional and will be assumed to be ‘r’ if it is ommitted.</p>\\n<p>A file has to be closed after the input and output operation has been completed to free up any resources. </p>\\n<p>Sample code to open a text file:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>file <span class=\\\"token operator\\\">=</span> open<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'hello_world.txt'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'w'</span><span class=\\\"token punctuation\\\">)</span>\\nfile<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello World!'</span><span class=\\\"token punctuation\\\">)</span>\\nfile<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<p><a href=\\\"https://docs.python.org/2/tutorial/inputoutput.html\\\">Python Documentation - IO</a>\\n<a href=\\\"https://automatetheboringstuff.com/chapter8/\\\">Automate the Boring Stuff</a>\\n<a href=\\\"https://www.tutorialspoint.com/python/python_files_io.htm\\\">Tutorials Point - Python IO</a></p>\",\"fields\":{\"slug\":\"/python/files-and-io/\"},\"frontmatter\":{\"title\":\"Files and IO\"}}},\"pathContext\":{\"slug\":\"/python/files-and-io/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---python-files-and-io-a454ffe21b7e95e062d5.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Files and IO</h2>\\n<p>File is a named location on disk to store related information. It is used to permanently store data in non-volatile memory (e.g. hard disk). Since, random access memory (RAM) is volatile which loses its data when computer is turned off, we use files for future use of the data.</p>\\n<p>When we want to read from or write to a file we need to open it first. When we are done, it needs to be closed, so that resources that are tied with the file are freed.</p>\\n<p>Hence, in Python, a file operation takes place in the following order:</p>\\n<ol>\\n<li>Open a file</li>\\n<li>Read or write (perform operation)</li>\\n<li>Close the file</li>\\n</ol>\\n<p>Python has many ways of input and output operations. Some of the output operations can be printing a text, console logs and even output a text or spreadsheet file. </p>\\n<h3>Output to Screen</h3>\\n<p>Python provides the simplest way to produce output to the screen. </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">\\\"Python is a powerful language.\\\"</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">\\\"It is easy to learn.\\\"</span>\\n</code></pre>\\n      </div>\\n<p>Output: </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Python is a powerful language.It is easy to learn.</code></pre>\\n      </div>\\n<h3>Input from User</h3>\\n<p>There are two ways to take input from a user.</p>\\n<dl>\\n  <dt> raw_input([prompt]) </dt>\\n  <dd>Used to read one line from standard input and returns it as a string</dd>\\n</dl>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>str <span class=\\\"token operator\\\">=</span> raw_input<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Enter your name: \\\"</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">\\\"Welcome \\\"</span><span class=\\\"token punctuation\\\">,</span> str\\n</code></pre>\\n      </div>\\n<p>Output: </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Enter your name: John Doe\\nWelcome John Doe</code></pre>\\n      </div>\\n<dl>\\n  <dt>input(prompt)</dt>\\n  <dd>Similar functionality to raw_input(), but assumes the input is a valid Python expression</dd>\\n</dl>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>str <span class=\\\"token operator\\\">=</span> input<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Enter input: \\\"</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">\\\"Input: \\\"</span><span class=\\\"token punctuation\\\">,</span> str\\n</code></pre>\\n      </div>\\n<p>Output: </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Enter input: [x*5 for x in range(2,10,2)]\\nInput: [10,20,30,40]</code></pre>\\n      </div>\\n<h3>Interacting with Files in Python</h3>\\n<p>Using Python, files can be easily opened, read, written and closed. With the available functions :</p>\\n<ol>\\n<li><code>open()</code></li>\\n<li><code>read()</code></li>\\n<li><code>write()</code></li>\\n<li><code>close()</code></li>\\n</ol>\\n<p>Example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>file1 <span class=\\\"token operator\\\">=</span> open<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"foo.txt\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"r+\\\"</span><span class=\\\"token punctuation\\\">)</span>     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Opens the file with read permission.  </span>\\nfile1<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Python is a powerful language.It is easy to learn.\\\"</span><span class=\\\"token punctuation\\\">)</span>     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Writes data into the file.</span>\\ndata <span class=\\\"token operator\\\">=</span> file1<span class=\\\"token punctuation\\\">.</span>read<span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">15</span><span class=\\\"token punctuation\\\">)</span>     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Reads first 15 characters in the file.</span>\\n<span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">\\\"First 15 characters are:\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> data     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Prints output</span>\\nfile1<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>     <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Closes the opened file.</span>\\n</code></pre>\\n      </div>\\n<p>Output:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>First 15 characters are:\\nPython is a pow</code></pre>\\n      </div>\\n<h4>Opening Files</h4>\\n<p>The python method open() can be used to return a file object. It is most commonly used with two arguments which are the file name and the mode of access. The mode of access is used to describe the way the file is accessed or used. </p>\\n<p>The most commonly used modes are ‘w’ which is for writing into the file and ‘r’ which is used for reading the file while ‘r+’ is used to read and write the file. ‘a’ is the mode that is used for appending text into the file. The mode argument is also optional and will be assumed to be ‘r’ if it is ommitted.</p>\\n<p>A file has to be closed after the input and output operation has been completed to free up any resources. </p>\\n<p>Sample code to open a text file:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>file <span class=\\\"token operator\\\">=</span> open<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'hello_world.txt'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'w'</span><span class=\\\"token punctuation\\\">)</span>\\nfile<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello World!'</span><span class=\\\"token punctuation\\\">)</span>\\nfile<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<p><a href=\\\"https://docs.python.org/2/tutorial/inputoutput.html\\\">Python Documentation - IO</a>\\n<a href=\\\"https://automatetheboringstuff.com/chapter8/\\\">Automate the Boring Stuff</a>\\n<a href=\\\"https://www.tutorialspoint.com/python/python_files_io.htm\\\">Tutorials Point - Python IO</a></p>\",\"fields\":{\"slug\":\"/python/files-and-io/\"},\"frontmatter\":{\"title\":\"Files and IO\"}}},\"pathContext\":{\"slug\":\"/python/files-and-io/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/python-files-and-io.json\n// module id = 5973\n// module chunks = 43632281400262"],"sourceRoot":""}