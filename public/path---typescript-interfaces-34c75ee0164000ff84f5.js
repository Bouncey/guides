webpackJsonp([0xa7208d11a6ab],{6247:function(n,s){n.exports={data:{markdownRemark:{html:'<h1>Interfaces</h1>\n<p>One of TypeScript’s core principles is that type-checking focuses on the shape that values have. This is sometimes called “duck typing” or “structural subtyping”. In TypeScript, <code>interfaces</code> fill the role of naming these types, and are a powerful way of defining contracts within your code as well as contracts with code outside of your project.</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    firstName<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n    lastName<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">printUserInfo</span><span class="token punctuation">(</span>user<span class="token punctuation">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>firstName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> myObj <span class="token operator">=</span> <span class="token punctuation">{</span>firstName<span class="token punctuation">:</span> <span class="token string">\'John\'</span><span class="token punctuation">,</span> lastName<span class="token punctuation">:</span> <span class="token string">\'Doe\'</span><span class="token punctuation">}</span>\n<span class="token function">printUserInfo</span><span class="token punctuation">(</span>myObj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Interfaces can contain optional parameters</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    email<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>',fields:{slug:"/typescript/interfaces/"},frontmatter:{title:"Interfaces"}}},pathContext:{slug:"/typescript/interfaces/"}}}});
//# sourceMappingURL=path---typescript-interfaces-34c75ee0164000ff84f5.js.map