{"version":3,"sources":["webpack:///path---python-if-elif-else-statements-4ec78d4bbd3b0f8e8bf2.js","webpack:///./.cache/json/python-if-elif-else-statements.json"],"names":["webpackJsonp","5982","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+zNAAAC,QAAkiOC,KAAA,oCAA0CC,aAAgBC,MAAA,6BAAoCC,aAAgBH,KAAA","file":"path---python-if-elif-else-statements-4ec78d4bbd3b0f8e8bf2.js","sourcesContent":["webpackJsonp([220450476668970],{\n\n/***/ 5982:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>If Elif Else Statements</h2>\\n<p>The <code>if</code>/<code>elif</code>/<code>else</code> structure is a common way to control the flow of a program, allowing you to execute specific blocks of code depending on the value of some data. If the condition following the keyword <code>if</code> evaluates as <code>true</code>, the block of code will execute:\\nNote that parenthesis is not used before and after the condition check as in other languages .</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'If block will execute!'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">5</span>\\n\\n<span class=\\\"token keyword\\\">if</span> x <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"The condition was true!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement executes</span>\\n</code></pre>\\n      </div>\\n<p>You can optionally add an <code>else</code> response that will execute if the condition is <code>false</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'If statement will execute!'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Else statement will execute!'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Or you can also see this example</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span>\\n\\n<span class=\\\"token keyword\\\">if</span> y <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I won't print!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement does not execute</span>\\n<span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"The condition wasn't true!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement executes</span>\\n</code></pre>\\n      </div>\\n<p><em>Note that there is no condition following the <code>else</code> keyword - it catches all situations where the condition was <code>false</code></em></p>\\n<p>Multiple conditions can be checked by including one or more <code>elif</code> checks after your initial <code>if</code> statement but only one condition will execute:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">7</span>\\n\\n<span class=\\\"token keyword\\\">if</span> z <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I won't print!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement does not execute</span>\\n<span class=\\\"token keyword\\\">elif</span> z <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I will!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement will execute</span>\\n<span class=\\\"token keyword\\\">elif</span> z <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I also won't print!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement does not execute</span>\\n<span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Neither will I!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement does not execute</span>\\n</code></pre>\\n      </div>\\n<p><em>Note only the first condition that evaluates as <code>true</code> will execute. Even though <code>z > 6</code> is <code>true</code>, the <code>if/elif/else</code> block terminates after the first true condition. This means that an <code>else</code> will only execute if none of the conditions were <code>true</code>.</em></p>\\n<p>We can also create nested if’s for decision making. Before preceding please refer to the  href=’<a href=\\\"https://guide.freecodecamp.org/python/code-blocks-and-indentation\\\">https://guide.freecodecamp.org/python/code-blocks-and-indentation</a>’ target=’_blank’ rel=‘nofollow’>indentation guide once</a> before preceding. </p>\\n<p>Let’s take an example of finding a number which is even and also greater than ‘10`</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>python \\nx = 34\\nif x %  2 == 0:  # this is how you create a comment and now, checking for even.\\n  if x > 10:\\n    print(\\\"This number is even and is greater than 10\\\")\\n  else:\\n    print(\\\"This number is even, but not greater 10\\\")\\nelse:\\n  print (\\\"The number is not even. So point checking further.\\\")</code></pre>\\n      </div>\\n<p>This was just a simple example for nested if’s. Please feel free to explore more online.</p>\\n<p>While the examples above are simple, you can create complex conditions using <a href='https://guide.freecodecamp.org/python/comparisons' target='_blank' rel='nofollow'>boolean comparisons</a> and <a href='https://guide.freecodecamp.org/python/boolean-operations' target='_blank' rel='nofollow'>boolean operators</a>.</p>\",\"fields\":{\"slug\":\"/python/if-elif-else-statements/\"},\"frontmatter\":{\"title\":\"If Elif Else Statements\"}}},\"pathContext\":{\"slug\":\"/python/if-elif-else-statements/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---python-if-elif-else-statements-4ec78d4bbd3b0f8e8bf2.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>If Elif Else Statements</h2>\\n<p>The <code>if</code>/<code>elif</code>/<code>else</code> structure is a common way to control the flow of a program, allowing you to execute specific blocks of code depending on the value of some data. If the condition following the keyword <code>if</code> evaluates as <code>true</code>, the block of code will execute:\\nNote that parenthesis is not used before and after the condition check as in other languages .</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'If block will execute!'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">5</span>\\n\\n<span class=\\\"token keyword\\\">if</span> x <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"The condition was true!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement executes</span>\\n</code></pre>\\n      </div>\\n<p>You can optionally add an <code>else</code> response that will execute if the condition is <code>false</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'If statement will execute!'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Else statement will execute!'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Or you can also see this example</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span>\\n\\n<span class=\\\"token keyword\\\">if</span> y <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I won't print!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement does not execute</span>\\n<span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"The condition wasn't true!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement executes</span>\\n</code></pre>\\n      </div>\\n<p><em>Note that there is no condition following the <code>else</code> keyword - it catches all situations where the condition was <code>false</code></em></p>\\n<p>Multiple conditions can be checked by including one or more <code>elif</code> checks after your initial <code>if</code> statement but only one condition will execute:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code>z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">7</span>\\n\\n<span class=\\\"token keyword\\\">if</span> z <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I won't print!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement does not execute</span>\\n<span class=\\\"token keyword\\\">elif</span> z <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I will!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement will execute</span>\\n<span class=\\\"token keyword\\\">elif</span> z <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I also won't print!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement does not execute</span>\\n<span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Neither will I!\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#this statement does not execute</span>\\n</code></pre>\\n      </div>\\n<p><em>Note only the first condition that evaluates as <code>true</code> will execute. Even though <code>z > 6</code> is <code>true</code>, the <code>if/elif/else</code> block terminates after the first true condition. This means that an <code>else</code> will only execute if none of the conditions were <code>true</code>.</em></p>\\n<p>We can also create nested if’s for decision making. Before preceding please refer to the  href=’<a href=\\\"https://guide.freecodecamp.org/python/code-blocks-and-indentation\\\">https://guide.freecodecamp.org/python/code-blocks-and-indentation</a>’ target=’_blank’ rel=‘nofollow’>indentation guide once</a> before preceding. </p>\\n<p>Let’s take an example of finding a number which is even and also greater than ‘10`</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>python \\nx = 34\\nif x %  2 == 0:  # this is how you create a comment and now, checking for even.\\n  if x > 10:\\n    print(\\\"This number is even and is greater than 10\\\")\\n  else:\\n    print(\\\"This number is even, but not greater 10\\\")\\nelse:\\n  print (\\\"The number is not even. So point checking further.\\\")</code></pre>\\n      </div>\\n<p>This was just a simple example for nested if’s. Please feel free to explore more online.</p>\\n<p>While the examples above are simple, you can create complex conditions using <a href='https://guide.freecodecamp.org/python/comparisons' target='_blank' rel='nofollow'>boolean comparisons</a> and <a href='https://guide.freecodecamp.org/python/boolean-operations' target='_blank' rel='nofollow'>boolean operators</a>.</p>\",\"fields\":{\"slug\":\"/python/if-elif-else-statements/\"},\"frontmatter\":{\"title\":\"If Elif Else Statements\"}}},\"pathContext\":{\"slug\":\"/python/if-elif-else-statements/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/python-if-elif-else-statements.json\n// module id = 5982\n// module chunks = 220450476668970"],"sourceRoot":""}