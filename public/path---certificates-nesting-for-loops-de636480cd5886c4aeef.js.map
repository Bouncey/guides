{"version":3,"sources":["webpack:///path---certificates-nesting-for-loops-de636480cd5886c4aeef.js","webpack:///./.cache/json/certificates-nesting-for-loops.json"],"names":["webpackJsonp","3701","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+pBAAubC,QAA6PC,KAAA,oCAA0CC,aAAgBC,MAAA,uBAA8BC,aAAgBH,KAAA","file":"path---certificates-nesting-for-loops-de636480cd5886c4aeef.js","sourcesContent":["webpackJsonp([210350180232187],{\n\n/***/ 3701:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>If you have a multi-dimensional array, you can use the same logic as the prior Challenge to loop through both the array and any sub-arrays. Here is an example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>    var arr = [\\n      [1,2], [3,4], [5,6]\\n    ];\\n    for (var i=0; i < arr.length; i++) {\\n      for (var j=0; j < arr[i].length; j++) {\\n        console.log(arr[i][j]);\\n      }\\n    }</code></pre>\\n      </div>\\n<p>This outputs each sub-element in <code>arr</code> one at a time. Note that for the inner loop, we are checking the <code>.length</code> of <code>arr[i]</code>, since <code>arr[i]</code> is itself an array.</p>\",\"fields\":{\"slug\":\"/certificates/nesting-for-loops/\"},\"frontmatter\":{\"title\":\"Nesting for Loops\"}}},\"pathContext\":{\"slug\":\"/certificates/nesting-for-loops/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-nesting-for-loops-de636480cd5886c4aeef.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>If you have a multi-dimensional array, you can use the same logic as the prior Challenge to loop through both the array and any sub-arrays. Here is an example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>    var arr = [\\n      [1,2], [3,4], [5,6]\\n    ];\\n    for (var i=0; i < arr.length; i++) {\\n      for (var j=0; j < arr[i].length; j++) {\\n        console.log(arr[i][j]);\\n      }\\n    }</code></pre>\\n      </div>\\n<p>This outputs each sub-element in <code>arr</code> one at a time. Note that for the inner loop, we are checking the <code>.length</code> of <code>arr[i]</code>, since <code>arr[i]</code> is itself an array.</p>\",\"fields\":{\"slug\":\"/certificates/nesting-for-loops/\"},\"frontmatter\":{\"title\":\"Nesting for Loops\"}}},\"pathContext\":{\"slug\":\"/certificates/nesting-for-loops/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-nesting-for-loops.json\n// module id = 3701\n// module chunks = 210350180232187"],"sourceRoot":""}