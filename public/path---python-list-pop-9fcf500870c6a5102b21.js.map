{"version":3,"sources":["webpack:///path---python-list-pop-9fcf500870c6a5102b21.js","webpack:///./.cache/json/python-list-pop.json"],"names":["webpackJsonp","5997","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,q2CAA4dC,QAA05BC,KAAA,qBAA2BC,aAAgBC,MAAA,qBAA4BC,aAAgBH,KAAA","file":"path---python-list-pop-9fcf500870c6a5102b21.js","sourcesContent":["webpackJsonp([128241766566807],{\n\n/***/ 5997:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Pop Function</h1>\\n<p>The method pop() removes and returns last element from the list. There is an optional parameter, index of the element to be removed from the list.\\nIf the index passed to the pop() method is not in the range, it throws IndexError: pop index out of range exception.</p>\\n<h4>Example Usage</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-py\\\"><code>cities = ['New York', 'Dallas', 'San Antonio', 'Houston', 'San Francisco'];\\n\\nprint \\\"City popped is : \\\", cities.pop()\\nprint \\\"City at index 2 is  : \\\", cities.pop(2)</code></pre>\\n      </div>\\n<h4>Output</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>City popped is :  San Francisco\\nCity at index 2 is  :  San Antonio</code></pre>\\n      </div>\\n<h4>Basic Stack Functionality</h4>\\n<p>The <code>pop()</code> method is often used in conjunction with <code>append()</code> to implement basic stack functionality in a Python application.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-py\\\"><code>stack = []\\n\\nfor i in range(5):\\n    stack.append(i)\\n\\nwhile len(stack):\\n    print(stack.pop())</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<p> The official documentation for <code>pop()</code> can be found <a href='https://docs.python.org/3.6/tutorial/datastructures.html' target='_blank' rel='nofollow'>here</a></p>\",\"fields\":{\"slug\":\"/python/list-pop/\"},\"frontmatter\":{\"title\":\"List Pop Method\"}}},\"pathContext\":{\"slug\":\"/python/list-pop/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---python-list-pop-9fcf500870c6a5102b21.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Pop Function</h1>\\n<p>The method pop() removes and returns last element from the list. There is an optional parameter, index of the element to be removed from the list.\\nIf the index passed to the pop() method is not in the range, it throws IndexError: pop index out of range exception.</p>\\n<h4>Example Usage</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-py\\\"><code>cities = ['New York', 'Dallas', 'San Antonio', 'Houston', 'San Francisco'];\\n\\nprint \\\"City popped is : \\\", cities.pop()\\nprint \\\"City at index 2 is  : \\\", cities.pop(2)</code></pre>\\n      </div>\\n<h4>Output</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>City popped is :  San Francisco\\nCity at index 2 is  :  San Antonio</code></pre>\\n      </div>\\n<h4>Basic Stack Functionality</h4>\\n<p>The <code>pop()</code> method is often used in conjunction with <code>append()</code> to implement basic stack functionality in a Python application.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-py\\\"><code>stack = []\\n\\nfor i in range(5):\\n    stack.append(i)\\n\\nwhile len(stack):\\n    print(stack.pop())</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<p> The official documentation for <code>pop()</code> can be found <a href='https://docs.python.org/3.6/tutorial/datastructures.html' target='_blank' rel='nofollow'>here</a></p>\",\"fields\":{\"slug\":\"/python/list-pop/\"},\"frontmatter\":{\"title\":\"List Pop Method\"}}},\"pathContext\":{\"slug\":\"/python/list-pop/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/python-list-pop.json\n// module id = 5997\n// module chunks = 128241766566807"],"sourceRoot":""}