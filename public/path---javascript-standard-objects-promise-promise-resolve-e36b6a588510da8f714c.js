webpackJsonp([91180751418660],{4814:function(e,n){e.exports={data:{markdownRemark:{html:'<h2>Promise Resolve</h2>\n<h3>Description</h3>\n<p>A <code>Promise.resolve</code> function indicates the successful completion of a Promise. This function allows you to return a Promise to the calling function.</p>\n<p><code>Promise.resolve</code> takes a single parameter to return to the calling function. This parameter can either be a value, a thenable, or another Promise. </p>\n<p>A “value” for a resolve function can be basic JavaScript types, arrays, or objects. </p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>Promise.resolve(\'success\'); // string\nPromise.resolve([2, 3, 5]); // array\nPromise.resolve({name: \'John\', age: \'43\'}); // object</code></pre>\n      </div>\n<p>A “thenable” is a function that takes two callback functions as parameters. You can use the first parameter to trigger a successful completion, and the second to return an error on the Promise.</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>thenableFunction = {then: function(onSuccesss, onFailure) {\n    if (condition === \'success\') {\n      onSuccess(paramList); // success condition\n    } else {\n      onFailure(paramList); // error condition\n    }\n  }\n}\n\nPromise.resolve(thenableFunction);</code></pre>\n      </div>\n<p>Chaining a then function to a promise caller will give you access to the result of <code>Promise.resolve</code>.</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>promiseCallingFunction(paramList)\n  .then(function(value) {\n    /* \n     * this is where you get access to the value \n     * returned by a promise on successful completion \n     */\n  });</code></pre>\n      </div>',fields:{slug:"/javascript/standard-objects/promise/promise-resolve/"},frontmatter:{title:"Promise Resolve"}}},pathContext:{slug:"/javascript/standard-objects/promise/promise-resolve/"}}}});
//# sourceMappingURL=path---javascript-standard-objects-promise-promise-resolve-e36b6a588510da8f714c.js.map