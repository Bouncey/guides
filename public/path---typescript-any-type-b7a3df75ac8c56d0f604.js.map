{"version":3,"sources":["webpack:///path---typescript-any-type-b7a3df75ac8c56d0f604.js","webpack:///./.cache/json/typescript-any-type.json"],"names":["webpackJsonp","6240","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,o9BAAm9BC,QAAgDC,KAAA,yBAA+BC,aAAgBC,MAAA,cAAqBC,aAAgBH,KAAA","file":"path---typescript-any-type-b7a3df75ac8c56d0f604.js","sourcesContent":["webpackJsonp([71364262397437],{\n\n/***/ 6240:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Any Type</h1>\\n<p>The Any type instructs Typescript to suspend type checking for the specified variables. Useful when working with dynamic content for which you don’t know the type, and for transitioning your codebase for Javascript to Typescript in pieces. You can use Javascript’s implicit typing with variables declared with a type of Any.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-typescript\\\"><code>  <span class=\\\"token keyword\\\">let</span> notSure<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">any</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\n  notSure <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"maybe a string instead\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  notSure <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/typescript/any-type/\"},\"frontmatter\":{\"title\":\"Any Type\"}}},\"pathContext\":{\"slug\":\"/typescript/any-type/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---typescript-any-type-b7a3df75ac8c56d0f604.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Any Type</h1>\\n<p>The Any type instructs Typescript to suspend type checking for the specified variables. Useful when working with dynamic content for which you don’t know the type, and for transitioning your codebase for Javascript to Typescript in pieces. You can use Javascript’s implicit typing with variables declared with a type of Any.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-typescript\\\"><code>  <span class=\\\"token keyword\\\">let</span> notSure<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">any</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\n  notSure <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"maybe a string instead\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  notSure <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/typescript/any-type/\"},\"frontmatter\":{\"title\":\"Any Type\"}}},\"pathContext\":{\"slug\":\"/typescript/any-type/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/typescript-any-type.json\n// module id = 6240\n// module chunks = 71364262397437"],"sourceRoot":""}