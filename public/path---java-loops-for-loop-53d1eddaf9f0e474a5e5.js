webpackJsonp([0x6eb95e9d125c],{4484:function(n,a){n.exports={data:{markdownRemark:{html:'<h1>For Loop</h1>\n<p>The <code>for</code> loop gives you a compact way to iterate over a range of values.\nA basic <code>for</code> statement has three parts: a variable initialization, a boolean expression, and an increment expression.</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>variable initialization<span class="token punctuation">;</span> <span class="token keyword">boolean</span> expression<span class="token punctuation">;</span> increment expression<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>  \n    <span class="token comment" spellcheck="true">// Statements</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<ul>\n<li><code>initialization</code> - Initializes the loop and is executed just once, at the beginning.</li>\n</ul>\n<p>You can initialize more than one variable of the same type in the first part of the basic <code>for</code> loop declaration; each initialization must be separated by a comma.</p>\n<ul>\n<li><code>expression</code> - Evaluated at the beginning of each iteration. If the <code>expression</code> evaluates to <code>true</code>, <code>Statements</code> will get executed.</li>\n<li><code>increment</code> - Invoked after each iteration through the loop. You can increase/decrease the value of variables here. Be sure the increment is working towards the expression value, to avoid an infinite loop.</li>\n</ul>\n<p>A common way the <code>for</code> loop is used is if you need to iterate your code a specific number of times. For example, if you wanted to output the numbers 0-10, you would initialize the variable for your counter to 0, then check if the value is less than 10, and add one to the counter after every iteration.</p>\n<p>Notice that you would check if the value is less than 10, not less than or equal to 10, since you are starting your counter at 0.</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> iter_For <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> iter_For <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> iter_For<span class="token operator">++</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>iter_For <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment" spellcheck="true">// Iterated 10 times, iter_For 0,1,2...9</span>\n<span class="token punctuation">}</span>\n\nSystem<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"iter_For Value: "</span> <span class="token operator">+</span> iter_For<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Note: It is also acceptable to declare a variable within the for loop as a single statement.</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> iter_For <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> iter_For <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> iter_For<span class="token operator">++</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span>print <span class="token punctuation">(</span>iter_For <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment" spellcheck="true">// Iterated 10 times, iter_For 0,1,2...9</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Output:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>0 1 2 3 4 5 6 7 8 9\niter_For Value: 10</code></pre>\n      </div>\n<p>Another example of a for loop that adds the first 50 numbers would be like this.\ni++ means i = i+1.</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">int</span> addUntil <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> sum <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> addUntil<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> \n<span class="token punctuation">{</span>\n    sum<span class="token operator">+=</span>i\n<span class="token punctuation">}</span>\n\nSystem<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The sum of the first 50 numbers is: "</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p><img src="https://forum.freecodecamp.org/images/emoji/emoji_one/rocket.png?v=2" title=":rocket:" alt=":rocket:" class="forum-image"> <a href=\'https://repl.it/CJYr/0\' target=\'_blank\' rel=\'nofollow\'>Run Code</a></p>\n<h3>Extras</h3>\n<p>You cannot use a number (old C-style language construct) or anything that does not evaluate to a boolean value as a condition for an if statement or looping construct. You canâ€™t, for example, say if(x), unless x is a boolean variable.</p>\n<p>Also, it is important to keep in mind that the boolean expression must, at some point, evaluate to true. Otherwise, your program will be stuck in an infinite loop.</p>',fields:{slug:"/java/loops/for-loop/"},frontmatter:{title:"For Loop"}}},pathContext:{slug:"/java/loops/for-loop/"}}}});
//# sourceMappingURL=path---java-loops-for-loop-53d1eddaf9f0e474a5e5.js.map