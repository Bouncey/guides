webpackJsonp([0x7674ac3521ee],{5740:function(e,n){e.exports={data:{markdownRemark:{html:'<h2>Node.js</h2>\n<p>Node.js is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world.</p>\n<h4>Let’s break it down.</h4>\n<ul>\n<li>Javascript runtime built on Chrome’s V8 JavaScript engine.<br>\nEvery browser has a JavaSript engine built in it to process JavaScript files contained in websites. Google Chrome uses V8 engine which is built using C++. Node.js also uses this super-fast engine to interpret JavaScript files.</li>\n<li>Node.js uses an event-driven model.<br>\nThis means that Node.js waits for certain events to take place. It then acts on those events. Events can be anything from a click to a HTTP request. We can also declare our own custom events and make node.js listen for those events.</li>\n<li>Node.js uses a non-blocking I/O model.<br>\nWe know that I/O tasks take much longer than processing tasks. Node.js uses callback functions to handle such requests.</li>\n</ul>\n<p>Let us assume that a particular I/O task takes 5 secs to execute.\nAnd we want to perform this I/O twice in our code.</p>\n<p><strong>Python</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token keyword">import</span> time\n\n<span class="token keyword">def</span> <span class="token function">my_io_task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n  time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"done"</span><span class="token punctuation">)</span>\n\nmy_io_task<span class="token punctuation">(</span><span class="token punctuation">)</span>\nmy_io_task<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p><strong>Node.js</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-node"><code>function my_io_task() {\n    setTimeout(function() {\n      console.log(\'done\');\n    }, 5000);\n}\n\nmy_io_task();\nmy_io_task();</code></pre>\n      </div>\n<p>Both look similar but the time taken to execute are different. The python code takes 10 seconds to execute while the Node.js code takes only 5 seconds to execute.<br>\nNode.js takes less time because of its non-blocking I/O model. The first call to <code>my_io_task()</code> starts the timer and leaves it there. It does not wait for the response from the function, instead, it moves on to call the second <code>my_io_task()</code>, starts the timer and leaves it there.<br>\nWhen the timer completes it’s execution taking 5 seconds, it calls the function and prints <code>done</code> on the console. Since, both the timers are started together, they complete together and therefore take same amount of time.</p>\n<h4>More information:</h4>\n<ul>\n<li><a href="https://nodejs.org">Official NodeJS site</a></li>\n<li><a href="https://github.com/creationix/nvm/blob/master/README.md">Node Version Manager</a></li>\n<li><a href="https://github.com/tj/n">n: Interactive NodeJS Version Manager</a></li>\n</ul>',fields:{slug:"/nodejs/"},frontmatter:{title:"Node.js"}}},pathContext:{slug:"/nodejs/"}}}});
//# sourceMappingURL=path---nodejs-d3154fddfcddd61a32be.js.map