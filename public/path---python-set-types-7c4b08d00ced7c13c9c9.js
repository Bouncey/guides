webpackJsonp([0x76104fe2ff04],{6017:function(e,t){e.exports={data:{markdownRemark:{html:"<p>A set object is an unordered collection of distinct hashable objects. Common uses include membership testing, removing duplicates from a sequence, and computing mathematical operations such as intersection, union, difference, and symmetric difference.</p>\n<p><a href='https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset' target='_blank' rel='nofollow'>Python Docs - Set Types Set Frozenset</a></p>\n<p><strong>TODO: Explain hash/hashable</strong>\nA hash table is a contiguous vector of records, whose slots come in three\nflavors:</p>\n<ol>\n<li>Slots with key+value pairs.  Call these citizens.</li>\n<li>Not-yet-used slots.  Call these virgins.</li>\n<li>Slots that were once citizens, but whose key got deleted, and where\nanother key+value pair hasn’t yet overwritten the slot.  Call these\nturds (that’s the technical term &#x3C;0.9 wink>).</li>\n</ol>\n<p>Python resizes the table when the number of virgins falls below a third of\nthe total number of slots.  In the usual case, Python doubles the table size\n(up to a current maximum of 1,073,741,824 slots).  However, if many\ndeletions leave behind many turds, it’s possible for the number of virgins\nto get very low despite that few citizens remain; in that case, Python\nactually shrinks the table (down to a current minimum of 4 slots).</p>\n<p>To avoid thrashing when a mix of additions and deletions are made when the\ntable is near a resize threshold, Python doesn’t actually check the # of\nvirgins after a delete (in effect, it assumes you’ll soon be replacing the\nturds with citizens again).  So, curiously enough, deleting a key <em>never</em>\nshrinks the table.  A long sequence of deletes followed by an add may shrink\nit, though.  A way to force possible shrinkage without adding a key is:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>dict = dict.copy()</code></pre>\n      </div>\n<p>dict.copy() always returns a turd-free dictionary, of the smallest\npower-of-2 size that leaves at least a third of the slots virgin.</p>",fields:{slug:"/python/set-types/"},frontmatter:{title:"Python Set Types"}}},pathContext:{slug:"/python/set-types/"}}}});
//# sourceMappingURL=path---python-set-types-7c4b08d00ced7c13c9c9.js.map